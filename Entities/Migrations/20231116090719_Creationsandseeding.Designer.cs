// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231116090719_Creationsandseeding")]
    partial class Creationsandseeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Entity", b =>
                {
                    b.Property<string>("EntityName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityName");

                    b.ToTable("Entities");

                    b.HasData(
                        new
                        {
                            EntityName = "Driver",
                            Description = "This driver entity contains features for driver data"
                        },
                        new
                        {
                            EntityName = "Character",
                            Description = "This character entity contains features for Character data "
                        },
                        new
                        {
                            EntityName = "Stock",
                            Description = "This Stock entity contains features for Stock data"
                        });
                });

            modelBuilder.Entity("Entities.Feature", b =>
                {
                    b.Property<int>("FeatureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeatureID"));

                    b.Property<string>("AdminComments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ApprovalStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FeatureDataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FeatureID");

                    b.HasIndex("EntityName");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            FeatureID = 1,
                            AdminComments = "good",
                            ApprovalStatus = false,
                            CreatedAt = new DateTime(2023, 11, 16, 14, 37, 19, 337, DateTimeKind.Local).AddTicks(7392),
                            EntityName = "Driver",
                            FeatureDataType = "double",
                            FeatureName = "Rating",
                            UserID = 0,
                            Value = "4.8"
                        },
                        new
                        {
                            FeatureID = 2,
                            AdminComments = "good",
                            ApprovalStatus = false,
                            CreatedAt = new DateTime(2023, 11, 16, 14, 37, 19, 337, DateTimeKind.Local).AddTicks(7437),
                            EntityName = "Driver",
                            FeatureDataType = "int",
                            FeatureName = "TripsToday",
                            UserID = 0,
                            Value = "12"
                        },
                        new
                        {
                            FeatureID = 3,
                            AdminComments = "good",
                            ApprovalStatus = false,
                            CreatedAt = new DateTime(2023, 11, 16, 14, 37, 19, 337, DateTimeKind.Local).AddTicks(7439),
                            EntityName = "Character",
                            FeatureDataType = "double",
                            FeatureName = "Height",
                            UserID = 0,
                            Value = "5.2"
                        },
                        new
                        {
                            FeatureID = 4,
                            AdminComments = "good",
                            ApprovalStatus = false,
                            CreatedAt = new DateTime(2023, 11, 16, 14, 37, 19, 337, DateTimeKind.Local).AddTicks(7440),
                            EntityName = "Character",
                            FeatureDataType = "double",
                            FeatureName = "Width",
                            UserID = 0,
                            Value = "12.6"
                        },
                        new
                        {
                            FeatureID = 5,
                            AdminComments = "good",
                            ApprovalStatus = false,
                            CreatedAt = new DateTime(2023, 11, 16, 14, 37, 19, 337, DateTimeKind.Local).AddTicks(7442),
                            EntityName = "Stock",
                            FeatureDataType = "double",
                            FeatureName = "Price",
                            UserID = 0,
                            Value = "2444.12"
                        });
                });

            modelBuilder.Entity("Entities.Feature", b =>
                {
                    b.HasOne("Entities.Entity", "Entity")
                        .WithMany("Features")
                        .HasForeignKey("EntityName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Entities.Entity", b =>
                {
                    b.Navigation("Features");
                });
#pragma warning restore 612, 618
        }
    }
}
